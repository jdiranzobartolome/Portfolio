// scss partial file for variables and mixins

$primary-color: #444444;
$secondary-color: #eece1a;
$e-accent-color: #fd5959;
$show-home-image: true;
$home-image: url(../img/seoul.jpg);
$background-opacity: 0.8;

//Nice colour combinations
//First one (original)
//$primary-color: #1f2652;
//$secondary-color: #d6ce15;
// Second one
//$primary-color: #116466;
//$secondary-color: #ffcb9a;
// Third one
//$primary-color: #116466;
//$secondary-color: #ffcb9a; //also nice if yellow (#ffcb9a

@mixin easeOut {
  transition: all 0.5s ease-out;
}

@mixin background {
  @if $show-home-image {
    //since we are including this function in the body, this will be body#bg-image
    &#bg-image {
      background: $home-image;
      background-repeat: no-repeat;
      // to choose whether the image should scroll with the content or not
      background-attachment: fixed;
      //for making it cover the entire space
      background-size: cover;

      // //div overlay method. Create a div right after the body
      .overlay {
        position: absolute;
        top: 0;
        right: 0;
        width: 100%;
        height: 100%;
        background: rgba($primary-color, $background-opacity);
        z-index: -1;
      }
    }
  }
}

// Set Text Color
//Function for setting the color text black or white according to the background color
//Since it needs to return something, it cannot be am mixin, needs to be a function.
@function set-text-color($color) {
  @if (lightness($color) >40) {
    @return #000000;
  } @else {
    @return #ffffff;
  }
}

//background image animation
@keyframes bg_image_animation {
  0%,
  100% {
    background-position: 0 0;
  }
  50%,
  51% {
    background-position: -500px 0;
  }
}

// Media Query Mixins (divided in super small, small,  medium and large size)
@mixin mediaSSm {
  @media screen and (max-width: 420px) {
    // @content is used for...
    @content;
  }
}

@mixin mediaSm {
  @media screen and (min-width: 421px) and (max-width: 640px) {
    // @content is used for...
    @content;
  }
}

@mixin mediaMd {
  @media screen and (min-width: 641px) and (max-width: 845px) {
    // @content is used for...
    @content;
  }
}

@mixin mediaLg {
  @media screen and (min-width: 846px) and (max-width: 1170px) {
    // @content is used for...
    @content;
  }
}

@mixin mediaXl {
  @media screen and (min-width: 1171px) {
    // @content is used for...
    @content;
  }
}

//fade_in and fade_out classed for using them with javascript when we want an element to fade in or out
.fade-in {
  opacity: 1 !important;
  transition: opacity 1000ms !important;
}

.fade-out {
  opacity: 0 !important;
  transition: opacity 1000ms !important;
}
